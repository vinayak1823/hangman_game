{"version":3,"sources":["components/Figure.js","components/Header.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","Header","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handlekeydown","e","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d11101ea.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length\r\n  return (\r\n    <svg height='250' width='200' className='figure-container'>\r\n      {/* <!-- Rod --> */}\r\n      <line x1='60' y1='20' x2='140' y2='20' />\r\n      <line x1='140' y1='20' x2='140' y2='50' />\r\n      <line x1='60' y1='20' x2='60' y2='230' />\r\n      <line x1='20' y1='230' x2='100' y2='230' />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 && <circle cx='140' cy='70' r='20' />}\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 && <line x1='140' y1='90' x2='140' y2='150' />}\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 && <line x1='140' y1='120' x2='120' y2='100' />}\r\n      {errors > 3 && <line x1='140' y1='120' x2='160' y2='100' />}\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 && <line x1='140' y1='150' x2='120' y2='180' />}\r\n      {errors > 5 && <line x1='140' y1='150' x2='160' y2='180' />}\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Hangman</h1>\r\n      <p>Find the hidden word - Enter a letter....</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n  return (\r\n    <div className='wrong-letters-container'>\r\n      <div>\r\n        {wrongLetters.length > 0 && <p>Wrong</p>}\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i}>{letter}</span>)\r\n          .reduce(\r\n            (prev, curr) => (prev === null ? [curr] : [prev, ', ', curr]),\r\n            null\r\n          )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react'\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n  return (\r\n    <div className='word'>\r\n      {selectedWord.split('').map((letter, i) => {\r\n        return (\r\n          <span className='letter' key={i}>\r\n            {correctLetters.includes(letter) ? letter : ''}\r\n          </span>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Word\r\n","export function showNotification(setter) {\r\n  setter(true)\r\n  setTimeout(() => {\r\n    setter(false)\r\n  }, 2000)\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win'\r\n\r\n  //check for win\r\n  word.split('').forEach((letter) => {\r\n    if (!correct.includes(letter)) {\r\n      status = ''\r\n    }\r\n  })\r\n\r\n  //check for loss\r\n  if (wrong.length === 6) status = 'lose'\r\n\r\n  return status\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { checkWin } from '../helpers/helpers'\r\n\r\nconst Popup = ({\r\n  correctLetters,\r\n  wrongLetters,\r\n  selectedWord,\r\n  setPlayable,\r\n  playAgain,\r\n}) => {\r\n  let finalMessage = ''\r\n  let finalMessageRevealWord = ''\r\n  let playable = true\r\n\r\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\r\n    finalMessage = 'Congratulations! You won! ðŸŽ‰ðŸŽ‰'\r\n    playable = false\r\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\r\n    finalMessage = 'Unfortunately you lost! ðŸ˜Ÿ'\r\n    finalMessageRevealWord = `...word was ${selectedWord}`\r\n    playable = false\r\n  }\r\n\r\n  useEffect(() => setPlayable(playable))\r\n\r\n  return (\r\n    <div\r\n      className='popup-container'\r\n      style={finalMessage !== '' ? { display: 'flex' } : {}}\r\n    >\r\n      <div className='popup'>\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div\r\n      className={`notification-container ${showNotification ? 'show' : ''} `}\r\n    >\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import './App.css'\nimport Figure from './components/Figure'\nimport Header from './components/Header'\nimport WrongLetters from './components/WrongLetters'\nimport Word from './components/Word'\nimport Popup from './components/Popup'\nimport Notification from './components/Notification'\nimport { useEffect, useState } from 'react'\nimport { showNotification as show } from './helpers/helpers'\n\nconst words = ['application', 'programming', 'interface', 'wizard']\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)]\n\nfunction App() {\n  const [playable, setPlayable] = useState(true)\n  const [correctLetters, setCorrectLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [showNotification, setShowNotification] = useState(false)\n\n  useEffect(() => {\n    const handlekeydown = (e) => {\n      const { key, keyCode } = e\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase()\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter])\n          } else {\n            show(setShowNotification)\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((currentLetters) => [...currentLetters, letter])\n          } else {\n            show(setShowNotification)\n          }\n        }\n      }\n    }\n\n    window.addEventListener('keydown', handlekeydown)\n\n    return () => window.removeEventListener('keydown', handlekeydown)\n  }, [correctLetters, wrongLetters, playable])\n\n  function playAgain() {\n    setPlayable(true)\n\n    //Empty arrays\n    setCorrectLetters([])\n    setWrongLetters([])\n\n    const random = Math.floor(Math.random() * words.length)\n    selectedWord = words[random]\n  }\n\n  return (\n    <>\n      <Header />\n      <div className='game-container'>\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Notification showNotification={showNotification} />\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}